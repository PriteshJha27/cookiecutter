import click
from pathlib import Path
from .router import Router
from .utils.logger import get_logger

logger = get_logger(__name__)

@click.group()
def cli():
    """CLI for HPT and Model Interpretability"""
    pass

@cli.command()
@click.option('--mode', type=click.Choice(['train', 'hpt']), 
              required=True, help='Mode of operation')
@click.option('--model', type=click.Choice(['vgg16', 'bert']), 
              required=True, help='Model to run')
def run(mode: str, model: str):
    """Run training or HPT for selected model"""
    try:
        # Verify config exists
        config_path = f"config/model_config/{model}.yml"
        if not Path(config_path).exists():
            click.echo(f"Error: Config not found for model: {model}")
            return

        # Initialize router
        router = Router(config_path=config_path)

        # Run selected mode
        if mode == 'hpt':
            logger.info(f"Starting HPT for {model}")
            study, best_model = router.run_hpt()
            click.echo(f"\nBest hyperparameters: {study.best_params}")
            click.echo(f"Best value: {study.best_value}")
        else:
            logger.info(f"Starting training for {model}")
            router.train()  # You'll need to implement this

    except Exception as e:
        logger.error(f"Error running {mode} for {model}: {str(e)}")
        click.echo(f"Operation failed. Check logs for details.")

if __name__ == '__main__':
    cli()
